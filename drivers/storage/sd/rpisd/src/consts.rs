use rpi::common::MMIO_BASE;

pub const EMMC_ARG2: u32 = MMIO_BASE + 0x00300000;
pub const EMMC_BLKSIZECNT: u32 = MMIO_BASE + 0x00300004;
pub const EMMC_ARG1: u32 = MMIO_BASE + 0x00300008;
pub const EMMC_CMDTM: u32 = MMIO_BASE + 0x0030000C;
pub const EMMC_RESP0: u32 = MMIO_BASE + 0x00300010;
pub const EMMC_RESP1: u32 = MMIO_BASE + 0x00300014;
pub const EMMC_RESP2: u32 = MMIO_BASE + 0x00300018;
pub const EMMC_RESP3: u32 = MMIO_BASE + 0x0030001C;
pub const EMMC_DATA: u32 = MMIO_BASE + 0x00300020;
pub const EMMC_STATUS: u32 = MMIO_BASE + 0x00300024;
pub const EMMC_CONTROL0: u32 = MMIO_BASE + 0x00300028;
pub const EMMC_CONTROL1: u32 = MMIO_BASE + 0x0030002C;
pub const EMMC_INTERRUPT: u32 = MMIO_BASE + 0x00300030;
pub const EMMC_INT_MASK: u32 = MMIO_BASE + 0x00300034;
pub const EMMC_INT_EN: u32 = MMIO_BASE + 0x00300038;
pub const EMMC_CONTROL2: u32 = MMIO_BASE + 0x0030003C;
pub const EMMC_SLOTISR_VER: u32 = MMIO_BASE + 0x003000FC;

pub const CMD_NEED_APP: u32 = 0x80000000;
pub const CMD_RSPNS_48: u32 = 0x00020000;
pub const CMD_ERRORS_MASK: u32 = 0xfff9c004;
pub const CMD_RCA_MASK: u32 = 0xffff0000;

pub const CMD_GO_IDLE: u32 = 0x00000000;
pub const CMD_ALL_SEND_CID: u32 = 0x02010000;
pub const CMD_SEND_REL_ADDR: u32 = 0x03020000;
pub const CMD_CARD_SELECT: u32 = 0x07030000;
pub const CMD_SEND_IF_COND: u32 = 0x08020000;
pub const CMD_STOP_TRANS: u32 = 0x0C030000;
pub const CMD_READ_SINGLE: u32 = 0x11220010;
pub const CMD_READ_MULTI: u32 = 0x12220032;
pub const CMD_SET_BLOCKCNT: u32 = 0x17020000;
pub const CMD_APP_CMD: u32 = 0x37000000;
pub const CMD_SET_BUS_WIDTH: u32 = (0x06020000|CMD_NEED_APP);
pub const CMD_SEND_OP_COND: u32 = (0x29020000|CMD_NEED_APP);
pub const CMD_SEND_SCR: u32 = (0x33220010|CMD_NEED_APP);

pub const SR_READ_AVAILABLE: u32 = 0x00000800;
pub const SR_DAT_INHIBIT: u32 = 0x00000002;
pub const SR_CMD_INHIBIT: u32 = 0x00000001;
pub const SR_APP_CMD: u32 = 0x00000020;

pub const INT_DATA_TIMEOUT: u32 = 0x00100000;
pub const INT_CMD_TIMEOUT: u32 = 0x00010000;
pub const INT_READ_RDY: u32 = 0x00000020;
pub const INT_CMD_DONE: u32 = 0x00000001;

pub const INT_ERROR_MASK: u32 = 0x017E8000;

pub const C0_SPI_MODE_EN: u32 = 0x00100000;
pub const C0_HCTL_HS_EN: u32 = 0x00000004;
pub const C0_HCTL_DWITDH: u32 = 0x00000002;

pub const C1_SRST_DATA: u32 = 0x04000000;
pub const C1_SRST_CMD: u32 = 0x02000000;
pub const C1_SRST_HC: u32 = 0x01000000;
pub const C1_TOUNIT_DIS: u32 = 0x000f0000;
pub const C1_TOUNIT_MAX: u32 = 0x000e0000;
pub const C1_CLK_GENSEL: u32 = 0x00000020;
pub const C1_CLK_EN: u32 = 0x00000004;
pub const C1_CLK_STABLE: u32 = 0x00000002;
pub const C1_CLK_INTLEN: u32 = 0x00000001;

pub const HOST_SPEC_NUM: u32 = 0x00ff0000;
pub const HOST_SPEC_NUM_SHIFT: u32 = 16;
pub const HOST_SPEC_V3: u32 = 2;
pub const HOST_SPEC_V2: u32 = 1;
pub const HOST_SPEC_V1: u32 = 0;

pub const SCR_SD_BUS_WIDTH_4: u32 = 0x00000400;
pub const SCR_SUPP_SET_BLKCNT: u32 = 0x02000000;
pub const SCR_SUPP_CCS: u32 = 0x00000001;

pub const ACMD41_VOLTAGE: u32 = 0x00ff8000;
pub const ACMD41_CMD_COMPLETE: u32 = 0x80000000;
pub const ACMD41_CMD_CCS: u32 = 0x40000000;
pub const ACMD41_ARG_HC: u32 = 0x51ff8000;
